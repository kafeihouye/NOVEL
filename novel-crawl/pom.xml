<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>novel</artifactId>
        <groupId>com.nsdciot</groupId>
        <version>3.6.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>novel-crawl</artifactId>

    <name>novel-crawl</name>
    <description>南创小说 爬虫管理程序</description>

    <dependencies>

        <dependency>
            <groupId>com.nsdciot</groupId>
            <artifactId>novel-common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <!-- 将相同groupId的依赖模块打包进来 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>${project.groupId}:*:*</include>
                                </includes>
                            </artifactSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--打包时去除第三方依赖-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <layout>ZIP</layout>
                    <includes>
                        <include>
                            <groupId>non-exists</groupId>
                            <artifactId>non-exists</artifactId>
                        </include>
                    </includes>
                </configuration>
            </plugin>
            <!--拷贝第三方依赖文件到指定目录-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--target/lib是依赖jar包的输出目录，根据自己喜好配置-->
                            <outputDirectory>target/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <includeScope>runtime</includeScope>
                            <excludeGroupIds>${project.groupId}</excludeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- 文件夹 -->
                                <copy todir="${project.build.directory}/build/conf" overwrite="true">
                                    <fileset dir="${basedir}/src/main/resources">
                                        <include name="**/*.*"/>
                                        <exclude name="mybatis/*/*.*"/>
                                    </fileset>
                                    <fileset dir="${basedir}/../novel-common/src/main/resources">
                                        <include name="**/*.*"/>
                                        <exclude name="mybatis/**"/>
                                    </fileset>
                                </copy>
                                <move todir="${project.build.directory}/build/lib">
                                <fileset dir="target/lib"/>
                                </move>
                                <copy file="${project.build.directory}/${project.artifactId}-${project.version}.jar"
                                      tofile="${project.build.directory}/build/${project.artifactId}.jar" />

                                <fixcrlf srcdir="${basedir}/src/main/build/scripts" eol="unix"/>
                                <copy todir="${project.build.directory}/build/bin">
                                    <fileset dir="${basedir}/src/main/build/scripts">
                                        <include name="*.sh" />
                                        <include name="*.txt" />
                                        <include name="*.bat" />
                                    </fileset>
                                </copy>
                                <zip destfile='${project.build.directory}/build/${project.artifactId}.zip'>
                                    <zipfileset filemode="755" dir= '${project.build.directory}/build/' />
                                </zip>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>
